rb_tadq_1714315886260 && rb_tadq_1714315886260([{"slot": "4246", "banner": "157113539", "name": "nbnr1", "html": "\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"mailru-visibility-check\"> <span class=\"mailru-visibility-check-counter\" data-counter=\"https:\/\/rs.mail.ru\/pixel\/AADi-AFxzw4XLeGFu7esBKqYYHT0EShhg82Hu-UVukoKne1Zymn3oDPboI_QeW83rL5eIOxGj1q655M7Wysgs0259gleDbXcyimFq25NinlIB1AJ6j0K6qRoDcJd8MuxG2s9M1XXFpYNJHwaOZzimxgxLoe_lrrwD5Ctl-pYchbc5EOjCQnt5lsaAQAAKNBoB6OLmlSYSvIF2SvYj9gyfhcExx6ZrToWR5-yagnifrC9bxPZtwe466plxaMZg4Lqt9Wu0lh_RNVcxUAsW96zvmxiD2iQHxEAYlbW-9kkdzyx9XRTam7faRLH2BGQAZmixOfKMKIpaWIIukwECTIspKF-37Y_8OCsVTdGJbxr2muWOx8TrWrFas9qzVzhWLwRRuV9_TFPUm45SYaTYn5MbfJqPCo793ozvlPUP9hykEtHMpfKhCcFNxKk37NBlKMBbvF6wuZgRI0dGOGr85fpp0cXy7UXVsSbYZcxrrAejeFufJMnJpMxE-1ZUl5lQ7JhGg0oWwUtSTQxHi41r_IVT-cVGcyOvLjZ_FcBU_CG_qKPNDUcBovAhL9ngxUL.gif\" style=\"display:none\"><\/span> <img src=\"https:\/\/rs.mail.ru\/pixel\/AADi-AFxzw4XLeGFu7esBKqYYHT0EShhg82Hu-UVukoKne1Zymn3oDPboI_QeW83rL5eIOxGj1q655M7Wysgs0259gleDbXcyimFq25NinlIB1AJ6j0K6qRoDcJd8MuxG2s9M1XXFpYNJHwaOZzimxgxLoe_lrrwD5Ctl-pYchbc5EOjCdsMdRQXAQAACSsdMkLItT6h_TdJYuwMpigqfdNXaAtDtTjR684puhzHgDW_n6pcXzeUPmCrYzTC26MO5-0Q7Y2bvH04iiIfVlW7NbAuJMQQeefOBGuMnQs9fTdQWf4pk9oOi4jgeKmH6tfZ7AfcFxhvpPF9ArEpMh2K0JsBBVjYnYyLoRChW_F41-vLdDf6Z3BHemk5ndHPxIWf4El22TvJURLt12hI6g8E8bSLu8Q26wFzztohH73sgwYmhJLVGA48KVOYEEwx5KLsqsnARsTOiAFHO9uI4NIOEhPIGHYu3l-1uYaNueRmfB_NU3xvreNqr5WSYKFnGQCIvz39U8nzqpKIAU8llxZr_xveY4UaaqIpyFu2M33p-NiS7_lJ9KBUKOEgmW1-.gif\" style=\"width:0;height:0;position:absolute;visibility:hidden;\" alt=\"\"\/><iframe src=\"https:\/\/ad.mail.ru\/adf\/1519210\" width=\"240\" height=\"400\" marginwidth=\"0\" marginheight=\"0\" framespacing=\"0\" frameborder=\"no\" scrolling=\"no\"><\/iframe> <\/div>\n\r\n<script>\r\n  try{\r\n    (function (w, d, prefix) {\r\n    w.RB = w.RB && w.RB.v && w.RB.v === 1 ? w.RB : (function () {\r\n      var \/\/ main flag,\r\n        enabled = !1,\r\n        servingType = serveType(),\r\n        useObserver = !!window.IntersectionObserver,\r\n        useGeom = !useObserver && servingType !== \"XD_FRAME\",\r\n        \/\/ old opera focus flag\r\n        focused = !0,\r\n        \/\/ counted flag\r\n        counted = \"mailru-visibility-counted\",\r\n        \/\/ banners to inspect\r\n        banners = {},\r\n        \/\/ shortcuts\r\n        e = d.documentElement,\r\n        VE = d.mozVisibilityState ? \"mozvisibilitychange\" : d.webkitVisibilityState ? \"webkitvisibilitychange\" : d.visibilityState ? \"visibilitychange\" : \"\",\r\n        HP = \"hidden\" in d ? \"hidden\" : \"webkitHidden\" in d ? \"webkitHidden\" : \"mozHidden\" in d ? \"mozHidden\" : \"\",\r\n        \/\/ lastTimeStamp = 0,\r\n\r\n        \/\/ timing\r\n        tm,\r\n        \/\/ interstion observer instance\r\n        observer;\r\n\r\n      \/\/ handlers\r\n      function onFocusIn() {\r\n        focused = !0;\r\n        C(!0);\r\n      }\r\n\r\n      function onFocusOut() {\r\n        focused = !1;\r\n      }\r\n\r\n      function onUnload() {\r\n        Clear();\r\n        off();\r\n      }\r\n\r\n      \/\/ using visibility could have profits when tab is not\r\n\r\n      function onVisibilityChange() {\r\n        if (!d[HP]) onFocusIn();\r\n        else onFocusOut();\r\n      }\r\n\r\n      function onWindowScroll() {\r\n        C();\r\n      }\r\n\r\n      function onWindowResize() {\r\n        C();\r\n      }\r\n\r\n      \/\/ I &ndash; inspect\r\n\r\n      function I(bannerObject, id) {\r\n        if (Object.prototype.toString.call(bannerObject) === \"[object Array]\") {\r\n          Clear(bannerObject);\r\n          var k = bannerObject.length - 1;\r\n          for (; k >= 0; k--) {\r\n            if (!s(bannerObject[k].el, counted)) {\r\n              I(bannerObject[k]);\r\n            }\r\n          }\r\n          return;\r\n        }\r\n\r\n        if (!useObserver && !useGeom) {\r\n          tr(bannerObject.pixels_undetermined);\r\n          bannerObject.el[counted] = true;\r\n          return;\r\n        }\r\n        \/\/ bannerObject contains bannerObject.el and bannerObject.pixels\r\n        if (!bannerObject.el.id) {\r\n          id =\r\n            prefix +\r\n            new Date().getTime() +\r\n            Math.round(Math.random() * 1e6);\r\n          bannerObject.el.id = id;\r\n        }\r\n\r\n        id = bannerObject.el.id;\r\n\r\n        \/\/ lastTimeStamp = new Date().getTime();\r\n        \/\/ adding the banner container to storage\r\n        if (!banners[id]) {\r\n          banners[id] = {\r\n            c: bannerObject.el,\r\n            px: bannerObject.pixels,\r\n            px_un: bannerObject.pixels_undetermined,\r\n            px_nv: bannerObject.pixels_nonviewable,\r\n            cb: bannerObject.callback,\r\n            io: useObserver\r\n          };\r\n        }\r\n\r\n        \/\/ enabling anyway\r\n        on();\r\n        if (useObserver) {\r\n          o(bannerObject.el);\r\n        }\r\n        C(!0);\r\n      }\r\n\r\n      \/\/ C &ndash; check viewability of banner with t, timeout after loading\r\n\r\n      function C(t) {\r\n        for (var id in banners) {\r\n          if (banners[id] && !G(id)) {\r\n            CL(id);\r\n          } else if (\r\n            banners[id] &&\r\n            getVA(banners[id].c) >= 50 &&\r\n            hasFocus() &&\r\n            !banners[id].t\r\n          ) {\r\n            (function (_id) {\r\n              banners[_id].t = setTimeout(function () {\r\n                try {\r\n                  P(_id);\r\n                } catch (e) {}\r\n              }, 1E3);\r\n            })(id);\r\n          } else if (\r\n            banners[id] &&\r\n            getVA(banners[id].c) < 50\r\n          ) {\r\n            if (banners[id].t) {\r\n              clearTimeout(banners[id].t);\r\n              delete banners[id].t;\r\n            }\r\n          } else if (banners[id] && !hasFocus()) {\r\n            if (banners[id].t) {\r\n              clearTimeout(banners[id].t);\r\n              delete banners[id].t;\r\n              clearTimeout(tm);\r\n              t = false;\r\n            }\r\n          } else if (!banners[id]) {\r\n            CL(id);\r\n          }\r\n        }\r\n\r\n        if (t) {\r\n          clearTimeout(tm);\r\n          tm = setTimeout(\r\n            function () {\r\n              C(!0);\r\n            },\r\n            useGeom ? 3e2 : 10e3\r\n          );\r\n        }\r\n      }\r\n\r\n      \/\/ CL &ndash; Clear timers and stop listeners\r\n\r\n      function CL(id, onlyTM, noCount) {\r\n        if (id && banners[id]) {\r\n          clearTimeout(banners[id].t);\r\n          banners[id].t = null;\r\n          if (!onlyTM) {\r\n            if (banners[id].io && observer) {\r\n              observer.unobserve(banners[id].c);\r\n            }\r\n\r\n            if (!noCount && !s(banners[id].c, counted)) {\r\n              tr(banners[id].px_nv);\r\n              banners[id].c[counted] = true;\r\n            }\r\n            banners[id].c = null;\r\n            delete banners[id];\r\n          }\r\n          return;\r\n        }\r\n        clearTimeout(tm);\r\n        tm = null;\r\n        for (var id in banners) {\r\n          if (banners[id].t) {\r\n            CL(id, !0);\r\n          }\r\n        }\r\n      }\r\n\r\n      function Clear(bannersArray) {\r\n        if (bannersArray && bannersArray.length >= 0) {\r\n          \/\/clear banners from array\r\n          var k = bannersArray.length - 1;\r\n          var id;\r\n          for (; k >= 0; k--) {\r\n            id = bannersArray[k].el.id;\r\n            if (id && banners[id]) {\r\n              \/\/ clear but don't count nonviewable\r\n              CL(id, !1, !0);\r\n            }\r\n          }\r\n        } else {\r\n          for (var id in banners) {\r\n            \/\/clear all\r\n            CL(id);\r\n          }\r\n        }\r\n      }\r\n\r\n      \/\/ P &ndash; pixel to send\r\n      function P(id, obj, cnt) {\r\n        if (!G(id)) {\r\n          CL(id);\r\n          \/\/ banner removed\r\n          return;\r\n        }\r\n\r\n        if (banners[id]) {\r\n          obj = banners[id].c;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n        if (!hasFocus()) {\r\n          CL(id, !0);\r\n          return;\r\n        } else if (getVA(obj) < 50) {\r\n          CL(id, !0);\r\n          return;\r\n        }\r\n\r\n        for (cnt = banners[id].px.length - 1; cnt >= 0; cnt--) {\r\n          new Image().src = banners[id].px[cnt];\r\n        }\r\n        \/\/ set counted flag - skip in next collect loops\r\n        obj[counted] = true;\r\n        \/\/try fire callback\r\n        var cb = banners[id].cb;\r\n        if (cb && typeof cb === \"function\") {\r\n          try {\r\n            cb();\r\n          } catch (e) {}\r\n        }\r\n        \/\/ remove banner from storage of inspectable items\r\n        CL(id);\r\n        \/\/ turn listeners off if banners are not present\r\n        if (!l(banners)) off();\r\n      }\r\n\r\n      function hasFocus() {\r\n        if (HP) focused = !d[HP];\r\n        else if (!VE && typeof d.hasFocus === \"function\")\r\n          focused = d.hasFocus();\r\n        return focused;\r\n      }\r\n\r\n      function getVA(obj, source) {\r\n        if (obj.id && banners[obj.id] && banners[obj.id].io) {\r\n          return banners[obj.id].v || 0;\r\n        }\r\n\r\n        var percent = getGeometryViewableArea(obj).percent;\r\n\r\n        return percent;\r\n      }\r\n\r\n      \/** LISTENERS SWITCHERS **\/\r\n      function on() {\r\n        if (enabled) return;\r\n        if (useGeom) {\r\n          ev(w, \"resize\", onWindowResize);\r\n          ev(w, \"scroll\", onWindowScroll);\r\n        }\r\n        if (useObserver) {\r\n          observer = new IntersectionObserver(h, {\r\n            threshold: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\r\n          });\r\n        }\r\n        if (VE) ev(d, VE, onVisibilityChange);\r\n        else {\r\n          ev(w, \"blur\", onFocusOut);\r\n          ev(w, \"focus\", onFocusIn);\r\n        }\r\n        ev(w, \"unload\", onUnload);\r\n        enabled = true;\r\n      }\r\n\r\n      function off() {\r\n        rm(w, \"unload\", onUnload);\r\n        rm(w, \"resize\", onWindowResize);\r\n        rm(w, \"scroll\", onWindowScroll);\r\n        if (VE) rm(d, VE, onVisibilityChange);\r\n        rm(w, \"focus\", onFocusIn);\r\n        rm(w, \"blur\", onFocusOut);\r\n        if (observer) {\r\n          observer.disconnect();\r\n          observer = null;\r\n        }\r\n        clearTimeout(tm);\r\n        enabled = false;\r\n      }\r\n\r\n      \/** INTERSECTION OBSERVER UTILS **\/\r\n      function o(e) {\r\n        observer && observer.observe(e);\r\n      }\r\n\r\n      function h(changes) {\r\n        changes.forEach(function (changeRecord) {\r\n          var element = changeRecord.target;\r\n          var id = element.id;\r\n\r\n          if (id && banners[id]) {\r\n            banners[id].v = Math.round(\r\n              changeRecord.intersectionRatio * 100\r\n            );\r\n          }\r\n        });\r\n        C();\r\n      }\r\n\r\n      \/** UTILS **\/\r\n      \/\/ G - get element by ID;\r\n      function G(E) {\r\n        return d.getElementById(E);\r\n      }\r\n      \/\/ ev - EVent to handle\r\n      function ev(elem, eventName, callback) {\r\n        elem.addEventListener\r\n          ? elem.addEventListener(eventName, callback, !1)\r\n          : elem.attachEvent &&\r\n            elem.attachEvent(\"on\" + eventName, callback);\r\n      }\r\n\r\n      function rm(elem, eventName, callback) {\r\n        elem.removeEventListener\r\n          ? elem.removeEventListener(eventName, callback, !1)\r\n          : elem.detachEvent &&\r\n            elem.detachEvent(\"on\" + eventName, callback);\r\n      }\r\n      \/\/ obj length\r\n      function l(obj) {\r\n        var s = 0,\r\n          key;\r\n        for (key in obj) {\r\n          if (obj.hasOwnProperty(key)) s++;\r\n        }\r\n        return s;\r\n      }\r\n      \/\/elem state\r\n      function s(elem, state) {\r\n        return !(typeof elem[state] == undefined || elem[state] !== true);\r\n      }\r\n      \/\/track\r\n      function tr(pixels) {\r\n        if (pixels && pixels.length) {\r\n          for (cnt = pixels.length - 1; cnt >= 0; cnt--) {\r\n            new Image().src = pixels[cnt];\r\n          }\r\n        }\r\n      }\r\n      function serveType() {\r\n        try {\r\n          if (window === window.top) {\r\n            return \"ON_PAGE\";\r\n          }\r\n\r\n          var currentWindow = window;\r\n\r\n          while (currentWindow !== currentWindow.parent) {\r\n            if (\r\n              currentWindow.document.domain !==\r\n              currentWindow.parent.document.domain\r\n            ) {\r\n              return \"XD_FRAME\";\r\n            }\r\n            currentWindow = currentWindow.parent;\r\n          }\r\n\r\n          return \"S_FRAME\";\r\n        } catch (e) {}\r\n\r\n        return \"XD_FRAME\";\r\n      }\r\n\r\n      \/\/ geometry viewability\r\n      function getGeometryViewableArea(element, contextWindow) {\r\n        try {\r\n          var rect = element.getBoundingClientRect();\r\n          var area = getArea(rect);\r\n          var currentWindow = window;\r\n\r\n          contextWindow = contextWindow || window.top;\r\n\r\n          while (currentWindow !== contextWindow) {\r\n            \/\/ 1) get current frame coordinates inside its parent\r\n            \/\/ 2) get element coordinates relative to parent\r\n            \/\/ 3) get visible element coordinates relative to parent\r\n            var currentRect = currentWindow.frameElement.getBoundingClientRect();\r\n\r\n            rect = getRR(rect, currentRect);\r\n            rect.left = Math.max(currentRect.left, rect.left);\r\n            rect.right = Math.min(currentRect.right, rect.right);\r\n            rect.top = Math.max(currentRect.top, rect.top);\r\n            rect.bottom = Math.min(currentRect.bottom, rect.bottom);\r\n\r\n            if (rect.right < rect.left) {\r\n              rect.right = rect.left;\r\n            }\r\n            if (rect.bottom < rect.top) {\r\n              rect.bottom = rect.top;\r\n            }\r\n\r\n            currentWindow = currentWindow.parent;\r\n          }\r\n          rect = getRVA(rect, contextWindow);\r\n\r\n          var viewableArea = getArea(rect);\r\n\r\n          rect.percent = (viewableArea \/ area) * 100;\r\n\r\n          return rect;\r\n        } catch (e) {\r\n          return { left: 0, right: 0, top: 0, bottom: 0, percent: 0 };\r\n        }\r\n      }\r\n\r\n      function getArea(rect) {\r\n        return (rect.right - rect.left) * (rect.bottom - rect.top);\r\n      }\r\n      \/\/ relative rect\r\n      function getRR(rect, contextRect) {\r\n        return {\r\n          left: rect.left + contextRect.left,\r\n          right: rect.right + contextRect.left,\r\n          top: rect.top + contextRect.top,\r\n          bottom: rect.bottom + contextRect.top,\r\n        };\r\n      }\r\n      \/\/ relative viewable area\r\n      function getRVA(rect, contextWindow) {\r\n        var result = {};\r\n        var contextSize = getVS(contextWindow);\r\n\r\n        result.left = Math.max(0, rect.left);\r\n        result.right = Math.min(contextSize.width, rect.right);\r\n        result.top = Math.max(0, rect.top);\r\n        result.bottom = Math.min(contextSize.height, rect.bottom);\r\n\r\n        return result;\r\n      }\r\n      \/\/ viewport size\r\n      function getVS(w) {\r\n        var viewPortSize = {\r\n          width: Infinity,\r\n          height: Infinity,\r\n        };\r\n        var d = w.document;\r\n\r\n        if (!isNaN(d.body.clientWidth) && d.body.clientWidth > 0) {\r\n          viewPortSize.width = d.body.clientWidth;\r\n        }\r\n        if (!isNaN(d.body.clientHeight) && d.body.clientHeight > 0) {\r\n          viewPortSize.height = d.body.clientHeight;\r\n        }\r\n        if (\r\n          !!d.documentElement &&\r\n          !!d.documentElement.clientWidth &&\r\n          !isNaN(d.documentElement.clientWidth)\r\n        ) {\r\n          viewPortSize.width = d.documentElement.clientWidth;\r\n        }\r\n        if (\r\n          !!d.documentElement &&\r\n          !!d.documentElement.clientHeight &&\r\n          !isNaN(d.documentElement.clientHeight)\r\n        ) {\r\n          viewPortSize.height = d.documentElement.clientHeight;\r\n        }\r\n        if (!!w.innerWidth && !isNaN(w.innerWidth)) {\r\n          viewPortSize.width = Math.min(viewPortSize.width, w.innerWidth);\r\n        }\r\n        if (!!w.innerHeight && !isNaN(w.innerHeight)) {\r\n          viewPortSize.height = Math.min(\r\n            viewPortSize.height,\r\n            w.innerHeight\r\n          );\r\n        }\r\n\r\n        return viewPortSize;\r\n      }\r\n\r\n      \/** PUBLIC INTERFACE **\/\r\n\r\n      return {\r\n        I: I,\r\n        \/\/ debug\r\n        \/\/ , banners: banners\r\n        v: 1,\r\n      };\r\n    })();\r\n  })(window, document, 'mailru')\r\n  }catch (e) {}\r\n<\/script>\r\n \r\n\r\n<script>\r\n  (function(prefix){\r\n    try{\r\n      \r\n      function getAdsContainers() {\r\n  \t\t\tvar ADS_CLASS = prefix + '-visibility-check',\r\n  \t\t\t\tADS_COUNTER_CLASS = ADS_CLASS + '-counter',\r\n  \t\t\t\tADS_CALLBACK_CLASS = ADS_CLASS + '-callback',\r\n  \t\t\t\tCOUNTER_ATTR = 'data-counter',\r\n  \t\t\t\tCOUNTER_ATTR_UNDETERMINED = COUNTER_ATTR + '-un',\r\n  \t\t\t\tCOUNTER_ATTR_NONVIEWABLE = COUNTER_ATTR + '-nv',\r\n  \t\t\t\tCALLBACK_ATTR = 'data-callback',\r\n  \t\t\t\tOBSERVER_ATTR = 'data-observer',\r\n  \t\t\t\tcontainers = [],\r\n  \t\t\t\tcountables = [],\r\n  \t\t\t\ti, k, counters, _counter, _observer;\r\n   \r\n  \t\t\tcontainers = getByClass(document, ADS_CLASS);\r\n  \t\t\tfor (i = containers.length - 1; i >= 0; i--) {\r\n  \t\t\t\tvar counters = getByClass(containers[i], ADS_COUNTER_CLASS, 'span');\r\n  \t\t\t\t_counter = containers[i].getAttribute(COUNTER_ATTR);\r\n  \t\t\t\t_observer = containers[i].hasAttribute(OBSERVER_ATTR);\r\n  \t\t\t\tcountables[i] = {\r\n  \t\t\t\t\tel: containers[i],\r\n  \t\t\t\t\tpixels: [],\r\n  \t\t\t\t\tpixels_undetermined: [],\r\n  \t\t\t\t\tpixels_nonviewable: [],\r\n  \t\t\t\t\tobserver: _observer\r\n  \t\t\t\t};\r\n  \t\t\t\tif (_counter) countables[i].pixels.push(_counter);\r\n  \t\t\t\tfor (k = counters.length - 1; k >= 0; k--) {\r\n  \t\t\t\t\tif (counters[k].parentNode === countables[i].el) {\r\n              _counter = counters[k].getAttribute(COUNTER_ATTR);\r\n              if (_counter) {\r\n                countables[i].pixels.push(_counter);\r\n              }\r\n              _counter = counters[k].getAttribute(COUNTER_ATTR_UNDETERMINED);\r\n              if (_counter) {\r\n                countables[i].pixels_undetermined.push(_counter);\r\n              }\r\n              _counter = counters[k].getAttribute(COUNTER_ATTR_NONVIEWABLE);\r\n              if (_counter) {\r\n                countables[i].pixels_nonviewable.push(_counter);\r\n              }\r\n            }\r\n  \t\t\t\t}\r\n  \t\t\t\tvar callback = getByClass(containers[i], ADS_CALLBACK_CLASS, 'span');\r\n  \t\t\t\tif (callback[0]) {\r\n  \t\t\t\t  var _callback = callback[0].getAttribute(CALLBACK_ATTR);\r\n  \t\t\t\t  if (_callback && window.RB_CALLBACKS && window.RB_CALLBACKS[_callback]) {\r\n  \t\t\t\t    countables[i].callback = window.RB_CALLBACKS[_callback];\r\n  \t\t\t\t  }\r\n  \t\t\t\t}\r\n  \t\t\t\tif (!countables[i].pixels.length) countables.splice(i, 1);\r\n  \t\t\t}\r\n   \r\n  \t\t\treturn countables;\r\n  \t\t}\r\n   \r\n  \t\tfunction getByClass(parent, childClassName, tagName) {\r\n  \t\t\tif (parent.getElementsByClassName) {\r\n  \t\t\t\treturn parent.getElementsByClassName(childClassName);\r\n  \t\t\t} else if (parent.querySelectorAll) {\r\n   \r\n  \t\t\t\treturn parent.querySelectorAll('.' + childClassName);\r\n  \t\t\t} else {\r\n  \t\t\t\tvar els = [];\r\n  \t\t\t\tvar tmp = parent.getElementsByTagName(tagName ? tagName : \"*\");\r\n  \t\t\t\tvar regex = new RegExp(\"(^|\\s)\" + childClassName + \"(\\s|$)\");\r\n  \t\t\t\tfor (var i = 0; i < tmp.length; i++) {\r\n  \t\t\t\t\tif (regex.test(tmp[i].className)) {\r\n  \t\t\t\t\t\tels.push(tmp[i]);\r\n  \t\t\t\t\t}\r\n  \t\t\t\t}\r\n  \t\t\t\treturn els;\r\n  \t\t\t}\r\n  \t\t}\r\n   \r\n  \t\tRB.I(getAdsContainers());\r\n      \r\n    }catch(e){}\r\n  }('mailru'))\r\n<\/script>\r\n"}])
